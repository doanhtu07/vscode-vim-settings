// Place your key bindings in this file to override the defaults
[
  // === VS Code related ===

  {
    "key": "ctrl+shift+backspace",
    "command": "workbench.action.terminal.kill",
    "when": "terminalHasBeenCreated || terminalIsOpen || terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+alt+tab",
    "command": "workbench.action.showAllEditors"
  },

  // Turbo console log: Optional if you use Turbo Console Log extension
  {
    "key": "cmd+i",
    "command": "turboConsoleLog.displayLogMessage"
  },

  // For better Vim experience
  // https://hoitz.medium.com/improved-vim-setup-in-visual-studio-code-bc579501b80c
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },

  // https://gist.github.com/safinakib/cc081218b73139ee81e5cb96dbc8e5db

  // === SUGGESTIONS AND AUTOCOMPLETION SHORTCUTS ===

  {
    // "ctrl+j": Selects the next suggestion in the suggestions widget when the widget is visible.
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    // "ctrl+k": Selects the previous suggestion in the suggestions widget when the widget is visible.
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    // "ctrl+j": Selects the next item in the Quick Open dialog when it is open.
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    // "ctrl+k": Selects the previous item in the Quick Open dialog when it is open.
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },

  // https://github.com/Melkeydev/vscode_bindings/blob/main/keybindings.json
  // https://dev.to/ansonh/10-vs-code-vim-tricks-to-boost-your-productivity-1b0n#1-smart-relative-line

  // === FILE TREE ===

  {
    "command": "runCommands",
    "args": {
      "commands": ["workbench.action.focusSideBar"]
    },
    "key": "cmd+shift+e",
    "when": "!sideBarVisible"
  },
  {
    "command": "runCommands",
    "args": {
      "commands": ["workbench.action.closeSidebar"]
    },
    "key": "cmd+shift+e",
    "when": "sideBarVisible"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "f",
    "when": "!inputFocus && sideBarVisible && explorerViewletVisible"
  },
  {
    "command": "workbench.files.action.focusOpenEditorsView",
    "key": "r",
    "when": "!inputFocus && sideBarVisible && explorerViewletVisible"
  },
  {
    "command": "outline.focus",
    "key": "o",
    "when": "!inputFocus && sideBarVisible && explorerViewletVisible"
  },

  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },

  // === SCROLL IN HOVER WINDOW ===

  {
    "key": "h",
    "command": "editor.action.scrollLeftHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "l",
    "command": "editor.action.scrollRightHover",
    "when": "editorHoverFocused"
  }
]
