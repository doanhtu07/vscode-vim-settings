{
  // MARK: === My custom settings ===

  // Another example full config from https://gist.github.com/safinakib/cc081218b73139ee81e5cb96dbc8e5db
  // Look at settings.json and keybindings.json

  // Config from https://github.com/VSCodeVim/Vim
  "vim.easymotion": true,
  "vim.incsearch": true,
  // "vim.useSystemClipboard": true, // --> To work with system clipboard, you can either use this option or use "*y and "*p
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.leader": "<Space>",
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // Permanently delete instead of saving into register
    {
      "before": ["leader", "d"],
      "after": ["\"", "_", "d"]
    },

    // Paste and continue with the same text instead of default vim behavior for pasting
    {
      "before": ["leader", "p", "p"],
      "after": ["p", "g", "v", "y"]
    },

    // https://github.com/VSCodeVim/Vim/#key-remapping
    {
      "before": ["<"],
      "after": ["<", "g", "v"]
    },
    {
      "before": [">"],
      "after": [">", "g", "v"]
    }
  ],
  "vim.normalModeKeyBindings": [
    // https://dev.to/ansonh/10-vs-code-vim-tricks-to-boost-your-productivity-1b0n#6-scroll-in-show-hover
    {
      "before": ["K"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    { "before": ["]", "d"], "commands": ["editor.action.marker.next"] },
    { "before": ["[", "d"], "commands": ["editor.action.marker.prev"] },
    {
      "before": ["]", "h"],
      "commands": [
        "editor.action.dirtydiff.next",
        // "workbench.action.editor.nextChange",
        "workbench.action.compareEditor.nextChange"
      ]
    },
    {
      "before": ["[", "h"],
      "commands": [
        "editor.action.dirtydiff.previous",
        // "workbench.action.editor.previousChange",
        "workbench.action.compareEditor.previousChange"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // Permanently delete instead of saving into register
    {
      "before": ["leader", "d"],
      "after": ["\"", "_", "d"]
    },

    // Paste and continue with the same text instead of default vim behavior for pasting
    {
      "before": ["leader", "p", "p"],
      "after": ["p", "g", "v", "y"]
    },

    {
      "before": ["<leader>", "n", "h"],
      "commands": [":nohl"]
    },

    {
      "before": ["<leader>", "t", "n"],
      "commands": ["workbench.action.newEmptyEditorWindow"]
    },
    {
      "before": ["<leader>", "t", "f"],
      "commands": ["workbench.action.copyEditorToNewWindow"]
    },

    {
      "before": ["<leader>", "h", "b"],
      "commands": ["gitlens.toggleFileBlame"]
    },
    {
      "before": ["<leader>", "h", "r"],
      "commands": ["git.revertSelectedRanges"]
    },

    {
      "before": ["<leader>", "r", "n"],
      "commands": ["editor.action.rename"]
    },

    {
      "before": ["<leader>", "p", "c"],
      "commands": ["copyFilePath"]
    },

    {
      "before": ["<leader>", "p", "a"],
      "commands": ["bookmarks.toggle"]
    },
    {
      "before": ["<leader>", "p", "l"],
      "commands": ["bookmarks.toggleLabeled"]
    },
    {
      "before": ["<leader>", "p", "o"],
      "commands": ["bookmarksExplorer.focus"]
    },

    {
      "before": ["<leader>", "o", "l"],
      "commands": ["workbench.action.focusAuxiliaryBar", "outline.focus"]
    },

    // https://github.com/Melkeydev/vscode_bindings/blob/main/settings.json
    // splits
    { "before": ["leader", "s", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "s", "h"], "commands": [":split"] },
    {
      "before": ["leader", "s", "m"],
      "commands": ["workbench.action.toggleMaximizeEditorGroup"]
    },
    {
      "before": ["leader", "s", "e"],
      "commands": ["workbench.action.evenEditorWidths"]
    }
  ],
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    "<C-b>": false,
    "<C-p>": false,
    "<C-w>": false
  },
  "vim.highlightedyank.enable": true,
  "vim.foldfix": true,

  // To improve performance
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1,
    "asvetliakov.vscode-neovim": 1
  },

  // MARK: === Optional -- This is my own preference for how the editor looks ===

  "files.eol": "\n", // LF by default
  "files.exclude": {
    "**/.DS_Store": false,
    "**/.git": false,
    "**/.hg": false,
    "**/.svn": false,
    "**/CVS": false,
    "**/Thumbs.db": false
  },

  "zenMode.showTabs": "none",
  "zenMode.hideLineNumbers": false,
  "zenMode.hideStatusBar": false,

  "workbench.editor.showTabs": "none",
  "workbench.editor.editorActionsLocation": "titleBar",
  "workbench.activityBar.location": "top",
  "workbench.tree.enableStickyScroll": false,
  "workbench.iconTheme": "catppuccin-mocha",
  "workbench.editor.enablePreview": false,
  "workbench.list.typeNavigationMode": "automatic",
  "workbench.list.defaultFindMode": "highlight",
  "workbench.sideBar.location": "right",
  "workbench.colorTheme": "Kanagawa",
  "workbench.secondarySideBar.showLabels": false,

  "editor.linkedEditing": true,
  "editor.stickyScroll.enabled": false,
  "editor.cursorSurroundingLines": 12,
  "editor.lineNumbers": "relative",
  "editor.fontFamily": "'Monaspace Argon', Menlo, 'JetBrainsMono Nerd Font', Monaco, 'Courier New', monospace",
  "editor.inlineSuggest.fontFamily": "'Monaspace Krypton', monospace",
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  "editor.renderWhitespace": "all",
  "editor.fontSize": 12,
  "editor.minimap.enabled": true,
  "editor.minimap.showMarkSectionHeaders": true,
  "editor.minimap.showRegionSectionHeaders": true,
  "editor.inlayHints.enabled": "off",
  "editor.accessibilitySupport": "off",

  "explorer.autoReveal": "focusNoScroll",

  "terminal.integrated.fontSize": 12,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.enableImages": true,
  "terminal.external.osxExec": "WezTerm.app",

  "search.useIgnoreFiles": false,

  "window.openFoldersInNewWindow": "on",
  "window.confirmSaveUntitledWorkspace": false,

  "notebook.lineNumbers": "on",

  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.updateImportsOnFileMove.enabled": "always",

  "peacock.surpriseMeOnStartup": true,
  "peacock.affectActivityBar": false,
  "peacock.affectStatusBar": true,
  "peacock.affectTitleBar": false,

  "vscode-pets.theme": "beach"

  // === Other auto settings ===
  // ...
}
